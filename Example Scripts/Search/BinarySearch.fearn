/* BinarySearch.fearn : Implements a Binary Search on a
 * list provided on the command line.
 * 
 * Also demonstrates use of the slice() function. 
 */
import io

fn main(args : str[]) => void
{
    if (args.length() == 0) {
        print("Must provide list"); return;
    }

    let term : int = (int)input("ENTER SEARCH TERM : ");

    let list : int[] = new int[ args.length() ];
    for (let i : int = 0; i < args.length(); i++)
    { list[i] = (int)args[i]; }
    
    let index : int = list.BinarySearch(term);
    if (index > -1) { print("INDEX IS : " + (str)index); } 
    else { print("NOT FOUND"); }
}

fn BinarySearch(list : int[], term : int) => int
{
    let m : int = list.length() / 2;
    let index : int;

    if (list.length() < 1) { return -1; } 
    else if (list[m] == term) { index = m; } 
    else if (list[m] > term) {
        index = BinarySearch(list.slice(0, m), term);
    } else {
        index = BinarySearch( 
            list.slice(m + 1, list.length()), 
            term
        );       
        if (index > -1 ) { index += m + 1; }
    }    
    return index;
}